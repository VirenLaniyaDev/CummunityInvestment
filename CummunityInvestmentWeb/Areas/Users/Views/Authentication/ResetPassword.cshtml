@model UserResetPasswordVM
@{
    ViewData["Title"] = "ResetPassword";
    Layout = "~/Views/Shared/_Authentication.cshtml";
}
@functions {
    public string IsValidField(string Key, ModelStateDictionary modelState)
    {
        return modelState.TryGetValue(Key, out var entry) && entry.Errors.Count > 0 ? "is-invalid" : "";
    }
}

<form class="form-container" method="post">
    <div class="container-head mb-4">
        <h2 class="title text-center">New Password</h2>
        <div class="description text-center">Please enter a new password in the fields below.</div>
    </div>
    <div class="input-container mb-3">
        <label asp-for="Password" class="form-label">New Password</label>
        <input asp-for="Password" type="password" class="form-control input @IsValidField("Password", ViewData.ModelState)" id="password" placeholder="Enter New password">
        <span asp-validation-for="Password" class="invalid-feedback"></span>
    </div>
    <div class="input-container mb-4">
        <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
        <input asp-for="ConfirmPassword" type="password" class="form-control input @IsValidField("ConfirmPassword", ViewData.ModelState)" placeholder="Confirm your New password">
        <span asp-validation-for="ConfirmPassword" class="invalid-feedback"></span>
    </div>
    <input asp-for="Email" type="hidden" value="@ViewData["UserEmail"]">
    <button type="submit" class="auth-form-btn mb-3">Change Password</button>
    <div class="ref-links-container d-flex flex-column align-items-center">
        <a class="mb-2 form-link" asp-controller="Authentication" asp-action="Login">Login</a>
    </div>
</form>

